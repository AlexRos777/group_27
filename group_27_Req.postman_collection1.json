 {
	"info": {
		"_postman_id": "159968e9-a3f2-4b97-a526-aacbb7929db7",
		"name": "group_27_Req",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" pm.test(\"Body have a right string\", function () {\r",
							"     pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							" });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json();\r",
							"pm.test(\"Test data_1\", function () {\r",
							"    pm.expect(resp.name).to.eql(request.data.name);\r",
							"    pm.expect(resp.age).to.eql(request.data.age);\r",
							"    pm.expect(resp.salary).to.eql(+request.data.salary);\r",
							"});\r",
							"let req = request.data;\r",
							"pm.test(\"Test data_2\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"    pm.expect(resp.salary).to.eql(+req.salary);\r",
							"});\r",
							"let family = resp.family\r",
							"console.log(\"family\", family)\r",
							"\r",
							"pm.test(\"check u_salary_1_5_year\", function () {\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"pm.test(\"Test data\", function (){\r",
							"    pm.expect(pm.response.name).to.eql(req.name);\r",
							"    pm.expect(pm.response.age).to.eql(req.age);\r",
							"    pm.expect(pm.response.salary).to.eql(req.salary);\r",
							"});\r",
							"let family = resp.family\r",
							"console.log(\"family\",family)\r",
							"\r",
							"pm.test(\"Test data_2\", function (){\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"name\");\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"age\");\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql (\"Luky\");\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql (4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Alex&age=35&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json();\r",
							"let req = pm.request.url.query.toObject()\r",
							"console.log(\"req\", req)\r",
							"\r",
							"pm.test(\"Test data\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"    pm.expect(resp.age).to.eql(+req.age);\r",
							"});\r",
							"let req_salary = req.salary;\r",
							"console.log(\"req_salary\", req_salary);\r",
							"let resp_salary = resp.salary;\r",
							"console.log(\"resp_salary\", resp_salary);\r",
							"console.log(\"salary[0]\", resp_salary[0]);\r",
							"console.log(\"salary [1]\", resp.salary[1]);\r",
							"console.log(\"salary [2]\", resp.salary[2]);\r",
							"\r",
							"let salary_0 = resp.salary[0];\r",
							"let salary_1 = resp.salary[1];\r",
							"let salary_2 = resp.salary[2];\r",
							"\r",
							"pm.test(\"Test data_salary\", function () {\r",
							"    pm.expect(salary_0).to.eql(+req_salary);\r",
							"    pm.expect(+salary_1).to.eql(+req_salary*2);\r",
							"    pm.expect(+salary_2).to.eql(+req_salary*3);\r",
							"});\r",
							"pm.environment.set(\"name\", req.name);\r",
							"pm.environment.set(\"age\", req.age);\r",
							"pm.environment.set(\"salary\", req.salary[0]);\r",
							"for (let a in resp.salary) {\r",
							"    console.log(resp.salary[a])\r",
							"}\r",
							"console.log(resp.salary)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alex&age=35&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alex"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"console.log(req)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Test json resp.\", function () {\r",
							" pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							" pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							" pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							" pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							" pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							" pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"pm.test(\"Test salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2);\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.7);\r",
							"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(req.salary * 3.3);\r",
							"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(req.salary * 3.8);\r",
							"});\r",
							"let person = resp.person\r",
							"\r",
							"pm.test(\"Test qa_salary\", function () {\r",
							"    pm.expect(person.u_name[1]).to.eql(+req.salary);\r",
							"    pm.expect(person.u_age).to.eql(+req.age);\r",
							"    pm.expect(person.u_salary_5_years).to.eql(+req.salary * 4.2)\r",
							"});\r",
							"\r",
							"for (let a in resp.person) {\r",
							"    console.log(resp.person[a]) \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}
